#ifndef PanelMapping_H
#define PanelMapping_H

// Define the 2D array for panel mapping. Each row is an array of LED numbers based on the provided layout.
const int panelMapping[][27] = 
{
    {0},    // Row 0 - Status LED

    {1},    // Row 1
    {4, 3, 2},  // Row 2
    {5, 6, 7, 8},   // Row 3
    {13, 12, 11, 10, 9},    // Row 4
    {14, 15, 16, 17, 18, 19},   // Row 5
    {26, 25, 24, 23, 22, 21, 20},   // Row 6

    {48, 49, 50, 51, 52, 53, 54},   // Row 7
    {411, 47, 46, 45, 44, 43, 42, 55},  // Row 8
    {413, 412, 37, 38, 39, 40, 41, 57, 56}, // Row 9
    {414, 415, 416, 36, 35, 34, 33, 58, 59, 60}, // Row 10
    {420, 419, 418, 417, 30, 31, 32, 64, 63, 62, 61}, // Row 11
    {421, 422, 423, 424, 425, 29, 28, 65, 66, 67, 68, 69}, // Row 12
    {431, 430, 429, 428, 427, 426, 27, 75, 74, 73, 72, 71, 70}, // Row 13
    {432, 433, 434, 435, 436, 437, 438, 76, 77, 78, 79, 80, 81, 82}, // Row 14

    {375, 377, 378, 384, 385, 395, 396, 410, 111, 110, 98, 97, 89, 88, 83}, // Row 15
    {376, 379, 383, 386, 394, 397, 409, 439, 112, 109, 99, 96, 90, 87, 85}, // Row 16
    {374, 380, 382, 387, 393, 398, 408, 440, 441, 113, 108, 100, 95, 91, 86, 140}, // Row 17
    {362, 373, 381, 388, 392, 399, 407, 444, 443, 442, 114, 107, 101, 94, 92, 141, 139}, // Row 18
    {361, 363, 372, 389, 391, 400, 406, 445, 446, 447, 448, 115, 106, 102, 93, 142, 138, 129}, // Row 19
    {353, 360, 364, 371, 390, 401, 405, 453, 452, 451, 450, 449, 116, 105, 103, 143, 137, 130, 128}, // Row 20
    {352, 354, 359, 365, 370, 402, 404, 454, 455, 456, 457, 458, 459, 117, 104, 144, 136, 131, 127, 122}, // Row 21
    {348, 351, 355, 358, 366, 369, 403, 466, 465, 464, 463, 462, 461, 460, 118, 145, 135, 132, 126, 123, 121}, // Row 22
    {347, 349, 350, 356, 357, 367, 368, 467, 468, 469, 470, 471, 472, 473, 474, 146, 134, 133, 125, 124, 120, 119}, // Row 23

    {320, 308, 307, 299, 298, 294, 293, 264, 263, 262, 261, 260, 259, 258, 257, 147, 149, 150, 156, 167, 168},  // Row 24
    {340, 319, 309, 306, 300, 297, 295, 292, 250, 251, 252, 253, 254, 255, 256, 222, 148, 151, 155, 158, 166, 169, 200}, // Row 25
    {339, 341, 318, 310, 305, 301, 296, 280, 291, 249, 248, 247, 246, 245, 244, 223, 221, 152, 154, 159, 165, 170, 199, 188}, // Row 26
    {329, 338, 342, 317, 311, 304, 302, 279, 281, 290, 239, 240, 241, 242, 243, 224, 220, 211, 153, 160, 164, 171, 198, 189, 187}, // Row 27
    {328, 330, 337, 343, 316, 312, 303, 271, 278, 282, 289, 238, 237, 236, 235, 225, 219, 212, 210, 161, 163, 172, 197, 190, 186, 179}, // Row 28
    {322, 327, 331, 336, 344, 315, 313, 270, 272, 277, 283, 288, 232, 233, 234, 226, 218, 213, 209, 204, 162, 173, 196, 191, 185, 180, 178}, // Row 29
    {323, 326, 332, 335, 345, 314, 266, 269, 273, 276, 284, 287, 231, 230, 227, 217, 214, 208, 205, 203, 174, 195, 192, 184, 181, 177}, // Row 30
    {321, 324, 325, 333, 334, 346, 265, 267, 268, 274, 275, 285, 286, 229, 228, 216, 215, 207, 206, 202, 201, 194, 193, 183, 182, 176, 175} // Row 31
};

// Array that stores the number of LEDs in each row
const int rowSizes[] = 
{
    1, 1, 3, 4, 5, 6, 7,
    7, 8, 9, 10, 11, 12, 13, 14,
    15, 15, 16, 17, 18, 19, 20, 21,
    21, 22, 23, 24, 25, 26, 27, 26, 27
};

const int totalRows = sizeof(panelMapping) / sizeof(panelMapping[0]);

// Define panels based on specified ranges
const int panelDefinitions[][50] = 
{
    // Panel 1: LEDs 1-26
    {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26},

    // Panel 2: LEDs 27-54
    {27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54},

    // Panel 3: LEDs 55-82
    {55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82},

    // Panel 4: LEDs 83-118
    {83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118},

    // Panel 5: LEDs 119-146
    {119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146},

    // Panel 6: LEDs 147-174
    {147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174},

    // Panel 7: LEDs 175-200
    {175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200},

    // Panel 8: LEDs 201-228
    {201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228},

    // Panel 9: LEDs 229-264
    {229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264},

    // Panel 10: LEDs 265-292
    {265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292},

    // Panel 11: LEDs 293-320
    {293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320},

    // Panel 12: LEDs 321-346
    {321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346},

    // Panel 13: LEDs 347-374
    {347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374},

    // Panel 14: LEDs 375-410
    {375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410},

    // Panel 15: LEDs 411-438
    {411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438},

    // Panel 16: LEDs 439-474
    {439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474}
};

// Total number of panels
const int totalPanels = sizeof(panelDefinitions) / sizeof(panelDefinitions[0]);

#endif // PanelMapping_H
